<section class="text-center py-8">
    <h2 class="text-3xl font-bold mb-6 text-gray-800 tracking-tight">TIME REMAINING</h2>
    <div id="countdown" class="flex justify-center space-x-4 text-center">
      <div class="flip-card">
        <div class="flip-card-inner" id="days-card">
          <div class="flip-card-front" id="days">00</div>
          <div class="flip-card-back">00</div>
        </div>
        <div class="label">DAYS</div>
      </div>
      <div class="flip-card">
        <div class="flip-card-inner" id="hours-card">
          <div class="flip-card-front" id="hours">00</div>
          <div class="flip-card-back">00</div>
        </div>
        <div class="label">HOURS</div>
      </div>
      <div class="flip-card">
        <div class="flip-card-inner" id="minutes-card">
          <div class="flip-card-front" id="minutes">00</div>
          <div class="flip-card-back">00</div>
        </div>
        <div class="label">MINUTES</div>
      </div>
      <div class="flip-card">
        <div class="flip-card-inner" id="seconds-card">
          <div class="flip-card-front" id="seconds">00</div>
          <div class="flip-card-back">00</div>
        </div>
        <div class="label">SECONDS</div>
      </div>
    </div>
  </section>
  
  <script>
    function updateCountdown() {
      const now = new Date();
      const targetDate = new Date();
      targetDate.setDate(now.getDate() + 40);
      targetDate.setHours(0, 0, 0, 0);
  
      const timeLeft = targetDate.getTime() - now.getTime();
  
      const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
      const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
      const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);
  
      updateCard('days', days);
      updateCard('hours', hours);
      updateCard('minutes', minutes);
      updateCard('seconds', seconds);
    }
  
    function updateCard(unit, value) {
      const newValue = String(value).padStart(2, '0');
      const card = document.getElementById(`${unit}-card`);
      const front = document.getElementById(unit);
      const back = card.querySelector('.flip-card-back');
      
      if (front.textContent !== newValue) {
        back.textContent = newValue;
        card.classList.add('flipping');
        
        // Add wooden flip sound
        playWoodSound();
        
        setTimeout(() => {
          front.textContent = newValue;
          card.classList.remove('flipping');
        }, 700);
      }
    }
  
    function playWoodSound() {
      const audio = new Audio('data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4Ljc2LjEwMAAAAAAAAAAAAAAA//tQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAACAAADQABISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhI//////////////////////////////////////////////////////////////////8AAAAATGF2YzU4LjEzAAAAAAAAAAAAAAAAJAAAAAAAAAAAA0B7qv+SAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA');
      audio.volume = 0.15;
      audio.play().catch(() => {});
    }
  
    setInterval(updateCountdown, 1000);
    updateCountdown();
  </script>
  
  <style>
    .flip-card {
      perspective: 1000px;
      width: 80px;
      height: 100px;
      display: inline-block;
      position: relative;
    }
  
    .flip-card-inner {
      position: relative;
      width: 100%;
      height: 100%;
      text-align: center;
      transition: transform 0.7s cubic-bezier(0.4, 0.2, 0.2, 1);
      transform-style: preserve-3d;
      transform-origin: 50% 100%;
    }

    .flip-card-front,
    .flip-card-back {
      position: absolute;
      width: 100%;
      height: 100%;
      backface-visibility: hidden;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 2.5rem;
      font-weight: 600;
      color: #ffffff;
      border-radius: 8px;
      background-image: 
        linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)),
        url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.8' numOctaves='4' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100' height='100' filter='url(%23noise)' opacity='0.5'/%3E%3C/svg%3E"),
        linear-gradient(145deg, #8B4513, #654321);
      box-shadow: 0 2px 15px rgba(0, 0, 0, 0.3);
      border: 2px solid rgba(139, 69, 19, 0.6);
    }

    .flip-card-front {
      transform: rotateX(0);
    }

    .flip-card-back {
      transform: rotateX(-180deg);
      background-image: 
        linear-gradient(rgba(0, 0, 0, 0.75), rgba(0, 0, 0, 0.75)),
        url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.8' numOctaves='4' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100' height='100' filter='url(%23noise)' opacity='0.5'/%3E%3C/svg%3E"),
        linear-gradient(145deg, #654321, #4A3219);
    }

    .flipping .flip-card-inner {
      transform: rotateX(180deg);
      animation: woodFlip 0.7s cubic-bezier(0.4, 0.2, 0.2, 1);
    }

    @keyframes woodFlip {
      0% {
        transform: rotateX(0) translateY(0);
      }
      40% {
        transform: rotateX(90deg) translateY(-2px);
      }
      100% {
        transform: rotateX(180deg) translateY(0);
      }
    }

    /* Wood grain effect */
    .flip-card-front:before,
    .flip-card-back:before {
      content: '';
      position: absolute;
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;
      background-image: repeating-linear-gradient(
        90deg,
        rgba(255, 255, 255, 0.05) 0px,
        rgba(255, 255, 255, 0.05) 2px,
        transparent 2px,
        transparent 4px
      );
      border-radius: 8px;
      pointer-events: none;
    }

    /* Edge lighting effect */
    .flip-card-front:after,
    .flip-card-back:after {
      content: '';
      position: absolute;
      left: 0;
      right: 0;
      height: 4px;
      background: linear-gradient(
        90deg,
        rgba(255, 255, 255, 0.1),
        rgba(255, 255, 255, 0.2) 50%,
        rgba(255, 255, 255, 0.1)
      );
    }

    .flip-card-front:after {
      bottom: 0;
    }

    .flip-card-back:after {
      top: 0;
    }

    /* Enhanced shadow effect */
    .flip-card:after {
      content: '';
      position: absolute;
      left: 5%;
      right: 5%;
      bottom: -8px;
      height: 15px;
      background: rgba(0, 0, 0, 0.4);
      filter: blur(8px);
      border-radius: 50%;
      z-index: -1;
      transition: all 0.7s cubic-bezier(0.4, 0.2, 0.2, 1);
    }

    .flipping:after {
      transform: scaleX(0.85) translateY(5px);
      opacity: 0.3;
    }

    .label {
      position: absolute;
      bottom: -24px;
      width: 100%;
      font-size: 0.75rem;
      font-weight: 600;
      text-align: center;
      color: #8B4513;
      letter-spacing: 0.03em;
      text-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
    }

    /* Add depth to the card sides */
    .flip-card-inner:before {
      content: '';
      position: absolute;
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;
      background: linear-gradient(
        to right,
        rgba(0, 0, 0, 0.2) 0%,
        transparent 5%,
        transparent 95%,
        rgba(0, 0, 0, 0.2) 100%
      );
      border-radius: 8px;
      z-index: 2;
      pointer-events: none;
    }
  </style>
  