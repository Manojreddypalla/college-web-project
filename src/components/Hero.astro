<section class="relative py-20 overflow-hidden">
  <div class="absolute inset-0 z-0">
    <img
      src="https://media.licdn.com/dms/image/v2/C561BAQGoY66aEX6qXQ/company-background_10000/company-background_10000/0/1593585933087/sreenidhi_institure_of_science_and_technology_cover?e=2147483647&v=beta&t=muqT75qceAiUAAtnIUrO1OhPYc57pDU1VHSKm-7ydRU"
      alt="Conference Background"
      class="w-full h-full object-cover opacity-20"
    />
    <div class="absolute inset-0 bg-gradient-to-r from-primary/30 to-secondary/30"></div>
  </div>

  <div class="container mx-auto px-4 relative z-10">
    <div class="max-w-3xl mx-auto text-center">
      <h1 class="text-4xl md:text-5xl font-bold mb-6 bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent">
        Welcome to ICNSIET 2025
      </h1>
      <p class="text-xl text-gray-800 mb-8">
        Advancing the Future of Computing Systems
      </p>
      <div class="flex flex-col sm:flex-row gap-4 justify-center">
        <a
        href="#register"
        class="px-12 py-6 bg-gradient-to-r from-primary to-secondary text-white font-medium rounded-lg shadow-lg hover:shadow-xl transition-all text-2xl"
      >
        Register Now
      </a>
      </div>
      <p id="visitor-counter" class="mt-8 text-lg font-bold text-gray-700">Loading visitor count...</p>
    </div>
  </div>
</section>

<script>
let clientId: string | null = null;

async function updateVisitorCount() {
  try {
    console.log('Fetching visitor count...');
    const response = await fetch('/api/visitors', {
      headers: {
        'x-client-id': clientId || ''
      }
    });
    
    if (!response.ok) {
      throw new Error(`Failed to fetch visitor count: ${response.status}`);
    }
    
    const data = await response.json();
    console.log('Received data:', data);
    
    clientId = response.headers.get('x-client-id');
    
    const visitorCounter = document.getElementById('visitor-counter');
    if (visitorCounter) {
      visitorCounter.textContent = `Total Visits: ${data.totalVisits} | Active Users: ${data.activeUsers}`;
      visitorCounter.style.display = 'block';
    } else {
      console.error('Visitor counter element not found');
    }
  } catch (error) {
    console.error('Error updating visitor count:', error);
    const visitorCounter = document.getElementById('visitor-counter');
    if (visitorCounter) {
      visitorCounter.textContent = 'Error loading visitor count';
      visitorCounter.style.display = 'block';
    }
  }
}

// Update count when page loads
document.addEventListener('DOMContentLoaded', () => {
  console.log('DOM loaded, initializing visitor counter...');
  updateVisitorCount();
});

// Update count every 10 seconds to keep active users count current
setInterval(updateVisitorCount, 10000);

// Update count when user interacts with the page
document.addEventListener('mousemove', updateVisitorCount);
document.addEventListener('click', updateVisitorCount);
document.addEventListener('keypress', updateVisitorCount);
</script>
